class timeseries.FilterFactory {
    +get(name): Filter
    +register(filter)
    +list(): [str]
}
note right of timeseries.FilterFactory
    Singelton
end note

interface timeseries.Filter {
  - __init__() # unrestricted and kwargs
  --
  - name(): str
  - init_args(): dict
  + args(): dict
  + __rep__(): str
   filter_data(data, stations, variables): Data
   filter_stations(stations): dict[str, Station]
   filter_variables(variables): [str]

}

class timeseries.VariableNameFilter {
  + __init__(reader_to_new, include, exclude): VariableNameChangingFilter
  + name: "variables"
  + init_args(): dict
  + filter_variables(variables): [str]
  + filter_data(data, stations, variables): Data
  ...
}

abstract class timeseries.DataIndexFilter {
  + filter_data(data, stations, variables): Data
  - filter_data_idx(data, stations, variables): idx
}


abstract class timeseries.StationReductionFilter {
  - __init__
  + filter_data_idx(data, stations, variables): Data
  - filter_stations(stations): dict[str, Station]
}

class timeseries.StationFilter {
  + __init__(include=[station], exclude=[station]): StationFilter
  + name: "stations"
  + init_args(): dict
  + filter_stations(stations): dict[str, Station]
  ...
}

class timeseries.CountryFilter {
  + __init__(include=[country], exclude=[country]): CountryFilter
  + name: "countries"
  + init_args(): dict
  + filter_stations(stations): dict[str, Station]
  ...
}

class timeseries.FlagFilter {
  + __init__(include=[flag], exclude=[flag]): FlagFilter
  + name: "flags"
  + init_args(): dict
  + filter_data(data, stations, variables): Data
  ...
}


timeseries.Filter <|.. timeseries.VariableNameFilter
timeseries.Filter <|.. timeseries.DataIndexFilter
timeseries.DataIndexFilter <|.. timeseries.StationReductionFilter
timeseries.StationReductionFilter <|.. timeseries.StationFilter
timeseries.StationReductionFilter <|.. timeseries.CountryFilter
timeseries.Filter <|.. timeseries.FlagFilter

